extends ./xml.jade
block content
  styleSheet&attributes(namespaces)
    numFmts(count=numberFormats.length)
      - locals.numberFormatRefs = {}
      each locale, n in numberFormats
        - locals.numberFormatRefs[locale.label] = numberFormatsBaseId + n
        numFmt(numFmtId=numberFormatsBaseId + n, formatCode!=locale.format)
    fonts(count=fonts.length, "x14ac:knownFonts"="1")
      - var knownProps = 'size-bold-italic-name'
      - locals.fontRefs = {}
      each font, o in fonts
        - locals.fontRefs[font.label] = o
        font
          name(val=font.name)/
          sz(val=font.size)/
          if font.color
            color/&attributes(font.color)
          if font.family
            family(val=font.family)/
          if font.scheme
            scheme(val=font.scheme)
          if font.bold
            b/
          if font.italic
            i/
    fills(count=fills.length)
      - locals.fillRefs = {}
      each fill, l in fills
        - locals.fillRefs[fill.label] = l
        fill
          patternFill(patternType=fill.type)
            if fill.type === 'solid'
              fgColor(rgb=fill.color)/
    borders(count=borders.length)
      - locals.borderRefs = {}
      each border, r in borders
        - locals.borderRefs[border.label] = r
        if Object.keys(border).length === 1
          border/
        else
          border
            if border.left
              left&attributes(border.left.attrs)
                if border.left.color
                  color/&attributes(border.left.color)
            else
              left/
            if border.right
              right&attributes(border.right.attrs)
                if border.right.color
                  color/&attributes(border.right.color)
            else
              right/
            if border.top
              top&attributes(border.top.attrs)
                if border.top.color
                  color/&attributes(border.top.color)
            else
              top/
            if border.bottom
              bottom&attributes(border.bottom.attrs)
                if border.bottom.color
                  color/&attributes(border.bottom.color)
            else
              bottom/
            if border.diagonal
              diagonal&attributes(border.diagonal.attrs)
                if border.diagonal.color
                  color/&attributes(border.diagonal.color)
            else
              diagonal/
    cellStyleXfs(count="1")
      xf(borderId="0" fillId="0" fontId="0" numFmtId="0")/
    cellXfs(count=cellStyles.length)
      - locals.cellStyleRefs = {}
      each style, t in cellStyles
        - var fillId = style.fill !== 'none'? locals.fillRefs[style.fill] : 0
        - var borderId = style.border ? locals.borderRefs[style.border] : 0
        - var numberFormat = style.numberFormat ? locals.numberFormatRefs[style.numberFormat] : 0
        - locals.cellStyleRefs[getCellStyleName(style)] = t
        if Object.keys(style).length === 1
          xf/
        else
          xf(
            applyBorder = borderId && 1 || void 0,
            applyFill = fillId && 1 || void 0,
            applyNumberFormat = numberFormat && 1 || void 0,
            borderId = borderId,
            fillId =  fillId,
            fontId = locals.fontRefs[style.font],
            numFmtId = numberFormat,
            xfId=0
          )
            if style.alignment
              alignment/&attributes(style.alignment)
    cellStyles(count="1")
      cellStyle(builtinId="0", name="Normal", xfId="0")/
    dxfs(count="0")/
    tableStyles(count="0", defaultPivotStyle="PivotStyleMedium4", defaultTableStyle="TableStyleMedium9")/
